<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Rust by Example: Time</title>
    <link rel=stylesheet href="site.css">
  </head>
  <body>
    <div class="example" id="time">
      <pre id="rustcode" hidden>// Go offers extensive support for times and durations;
// here are some examples.

package main

import "fmt"
import "time"

func main() {
    p := fmt.Println

    // We'll start by getting the current time.
    now := time.Now()
    p(now)

    // You can build a `time` struct by providing the
    // year, month, day, etc. Times are always associated
    // with a `Location`, i.e. time zone.
    then := time.Date(
        2009, 11, 17, 20, 34, 58, 651387237, time.UTC)
    p(then)

    // You can extract the various components of the time
    // value as expected.
    p(then.Year())
    p(then.Month())
    p(then.Day())
    p(then.Hour())
    p(then.Minute())
    p(then.Second())
    p(then.Nanosecond())
    p(then.Location())

    // The Monday-Sunday `Weekday` is also available.
    p(then.Weekday())

    // These methods compare two times, testing if the
    // first occurs before, after, or at the same time
    // as the second, respectively.
    p(then.Before(now))
    p(then.After(now))
    p(then.Equal(now))

    // The `Sub` methods returns a `Duration` representing
    // the interval between two times.
    diff := now.Sub(then)
    p(diff)

    // We can compute the length of the duration in
    // various units.
    p(diff.Hours())
    p(diff.Minutes())
    p(diff.Seconds())
    p(diff.Nanoseconds())

    // You can use `Add` to advance a time by a given
    // duration, or with a `-` to move backwards by a
    // duration.
    p(then.Add(diff))
    p(then.Add(-diff))
}
</pre>
      <h2><a href="./">Rust by Example</a>: Time</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Go offers extensive support for times and durations;
here are some examples.</p>

          </td>
          <td class="code empty leading">
	        
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="n">package</span><span class="w"> </span><span class="n">main</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="n">import</span><span class="w"> </span><span class="s">&quot;fmt&quot;</span><span class="w"></span>
<span class="n">import</span><span class="w"> </span><span class="s">&quot;time&quot;</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="n">func</span><span class="w"> </span><span class="n">main</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="n">fmt</span><span class="p">.</span><span class="n">Println</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>We&rsquo;ll start by getting the current time.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">now</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="n">time</span><span class="p">.</span><span class="n">Now</span><span class="p">()</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">now</span><span class="p">)</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>You can build a <code>time</code> struct by providing the
year, month, day, etc. Times are always associated
with a <code>Location</code>, i.e. time zone.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">then</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="n">time</span><span class="p">.</span><span class="n">Date</span><span class="p">(</span><span class="w"></span>
<span class="w">        </span><span class="mi">2009</span><span class="p">,</span><span class="w"> </span><span class="mi">11</span><span class="p">,</span><span class="w"> </span><span class="mi">17</span><span class="p">,</span><span class="w"> </span><span class="mi">20</span><span class="p">,</span><span class="w"> </span><span class="mi">34</span><span class="p">,</span><span class="w"> </span><span class="mi">58</span><span class="p">,</span><span class="w"> </span><span class="mi">651387237</span><span class="p">,</span><span class="w"> </span><span class="n">time</span><span class="p">.</span><span class="n">UTC</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">)</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>You can extract the various components of the time
value as expected.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Year</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Month</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Day</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Hour</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Minute</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Second</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Nanosecond</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Location</span><span class="p">())</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>The Monday-Sunday <code>Weekday</code> is also available.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Weekday</span><span class="p">())</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>These methods compare two times, testing if the
first occurs before, after, or at the same time
as the second, respectively.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Before</span><span class="p">(</span><span class="n">now</span><span class="p">))</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">After</span><span class="p">(</span><span class="n">now</span><span class="p">))</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Equal</span><span class="p">(</span><span class="n">now</span><span class="p">))</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>The <code>Sub</code> methods returns a <code>Duration</code> representing
the interval between two times.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">diff</span><span class="w"> </span><span class="o">:=</span><span class="w"> </span><span class="n">now</span><span class="p">.</span><span class="n">Sub</span><span class="p">(</span><span class="n">then</span><span class="p">)</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">diff</span><span class="p">)</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>We can compute the length of the duration in
various units.</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">diff</span><span class="p">.</span><span class="n">Hours</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">diff</span><span class="p">.</span><span class="n">Minutes</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">diff</span><span class="p">.</span><span class="n">Seconds</span><span class="p">())</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">diff</span><span class="p">.</span><span class="n">Nanoseconds</span><span class="p">())</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>You can use <code>Add</code> to advance a time by a given
duration, or with a <code>-</code> to move backwards by a
duration.</p>

          </td>
          <td class="code">
	        
            <div class="highlight"><pre><span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">diff</span><span class="p">))</span><span class="w"></span>
<span class="w">    </span><span class="n">p</span><span class="p">(</span><span class="n">then</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="o">-</span><span class="n">diff</span><span class="p">))</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="gp">$</span> go run time.go
<span class="go">2012-10-31 15:50:13.793654 +0000 UTC</span>
<span class="go">2009-11-17 20:34:58.651387237 +0000 UTC</span>
<span class="go">2009</span>
<span class="go">November</span>
<span class="go">17</span>
<span class="go">20</span>
<span class="go">34</span>
<span class="go">58</span>
<span class="go">651387237</span>
<span class="go">UTC</span>
<span class="go">Tuesday</span>
<span class="go">true</span>
<span class="go">false</span>
<span class="go">false</span>
<span class="go">25891h15m15.142266763s</span>
<span class="go">25891.25420618521</span>
<span class="go">1.5534752523711128e+06</span>
<span class="go">9.320851514226677e+07</span>
<span class="go">93208515142266763</span>
<span class="go">2012-10-31 15:50:13.793654 +0000 UTC</span>
<span class="go">2006-12-05 01:19:43.509120474 +0000 UTC</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Next we&rsquo;ll look at the related idea of time relative to
the Unix epoch.</p>

          </td>
          <td class="code empty">
	        
            
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Next example: <a href="epoch">Epoch</a>.
      </p>
      
      <p class="footer">
        by <a href="https://fiatjaf.alhur.es/">fiatjaf</a> | <a href="https://github.com/fiatjaf/rustbyexample/blob/master/examples/time">source</a> | <a href="https://github.com/fiatjaf/rustbyexample#license">license</a>
      </p>
    </div>
  </body>
</html>
